[
    {
        '$unwind': {
            'path': '$cve.problemtype.problemtype_data', 
            'preserveNullAndEmptyArrays': True
        }
    }, {
        '$unwind': {
            'path': '$cve.problemtype.problemtype_data.description', 
            'preserveNullAndEmptyArrays': True
        }
    }, {
        '$project': {
            'cve_id': '$cve.CVE_data_meta.ID', 
            'cwe': '$cve.problemtype.problemtype_data.description.value', 
            'metrics': {
                'vector': {
                    '$ifNull': [
                        '$impact.baseMetricV3.cvssV3.vectorString', '$impact.baseMetricV2.cvssV2.vectorString'
                    ]
                }, 
                'baseScore': {
                    '$ifNull': [
                        '$impact.baseMetricV3.cvssV3.baseScore', '$impact.baseMetricV2.cvssV2.baseScore'
                    ]
                }, 
                'impactScore': {
                    '$ifNull': [
                        '$impact.baseMetricV3.impactScore', '$impact.baseMetricV2.impactScore'
                    ]
                }, 
                'severity': {
                    '$ifNull': [
                        '$impact.baseMetricV3.severity', '$impact.baseMetricV2.severity'
                    ]
                }
            }, 
            'configurations': '$configurations.nodes.cpe_match', 
            'references': '$cve.references.reference_data.url'
        }
    }, {
        '$project': {
            'cve_id': 1, 
            'cwe': 1, 
            'metrics': 1, 
            'patches': {
                '$filter': {
                    'input': '$references', 
                    'as': 'url', 
                    'cond': {
                        '$regexMatch': {
                            'input': '$$url', 
                            'regex': '^.*github.*commit.*([0-9a-f]{40}).*$'
                        }
                    }
                }
            }, 
            'cpe_vendors': {
                '$map': {
                    'input': '$configurations', 
                    'as': 'config', 
                    'in': {
                        '$cond': {
                            'if': {
                                '$isArray': '$$config.cpe23Uri'
                            }, 
                            'then': {
                                '$arrayElemAt': [
                                    '$$config.cpe23Uri', 0
                                ]
                            }, 
                            'else': '$$config.cpe23Uri'
                        }
                    }
                }
            }, 
            'github_vendors': {
                '$map': {
                    'input': {
                        '$filter': {
                            'input': '$references', 
                            'as': 'url', 
                            'cond': {
                                '$regexMatch': {
                                    'input': '$$url', 
                                    'regex': '^.*github.*commit.*([0-9a-f]{40}).*$'
                                }
                            }
                        }
                    }, 
                    'as': 'url', 
                    'in': {
                        '$regexFind': {
                            'input': '$$url', 
                            'regex': '^.*github\\.com/([^/]+)/([^/]+)'
                        }
                    }
                }
            }
        }
    }, {
        '$project': {
            'cve_id': 1, 
            'cwe': 1, 
            'metrics': 1, 
            'patches': 1, 
            'vendor': {
                '$ifNull': [
                    {
                        '$arrayElemAt': [
                            {
                                '$map': {
                                    'input': '$cpe_vendors', 
                                    'as': 'cpe', 
                                    'in': {
                                        '$arrayElemAt': [
                                            {
                                                '$split': [
                                                    '$$cpe', ':'
                                                ]
                                            }, 3
                                        ]
                                    }
                                }
                            }, 0
                        ]
                    }, {
                        '$arrayElemAt': [
                            {
                                '$map': {
                                    'input': '$github_vendors', 
                                    'as': 'gh', 
                                    'in': {
                                        '$arrayElemAt': [
                                            '$$gh.captures', 0
                                        ]
                                    }
                                }
                            }, 0
                        ]
                    }
                ]
            }, 
            'product': {
                '$ifNull': [
                    {
                        '$arrayElemAt': [
                            {
                                '$map': {
                                    'input': '$cpe_vendors', 
                                    'as': 'cpe', 
                                    'in': {
                                        '$arrayElemAt': [
                                            {
                                                '$split': [
                                                    '$$cpe', ':'
                                                ]
                                            }, 4
                                        ]
                                    }
                                }
                            }, 0
                        ]
                    }, {
                        '$arrayElemAt': [
                            {
                                '$map': {
                                    'input': '$github_vendors', 
                                    'as': 'gh', 
                                    'in': {
                                        '$arrayElemAt': [
                                            '$$gh.captures', 1
                                        ]
                                    }
                                }
                            }, 0
                        ]
                    }
                ]
            }
        }
    }
]